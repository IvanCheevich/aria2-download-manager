#!/usr/bin/env python3

import tkinter as tk
from tkinter import ttk, messagebox, filedialog
import threading
import time
import os
from aria2_client import Aria2Client
from utils import format_size, format_speed, format_time


class SimpleDownloadGUI:
    """–ü—Ä–æ—Å—Ç–æ–π GUI –Ω–∞ tkinter –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è aria2"""
    
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("Aria2 Download Manager (Simple)")
        self.root.geometry("800x600")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è aria2 –∫–ª–∏–µ–Ω—Ç–∞
        self.aria2_client = Aria2Client()
        if not self.aria2_client.start_aria2_daemon():
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å aria2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ aria2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
            self.root.destroy()
            return
        
        self.downloads = {}
        self.setup_ui()
        self.setup_monitoring()
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º
        main_frame = ttk.Frame(self.root)
        main_frame.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)
        
        # –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        control_frame = ttk.Frame(main_frame)
        control_frame.pack(fill=tk.X, pady=(0, 10))
        
        # –ö–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        ttk.Button(control_frame, text="‚ûï –î–æ–±–∞–≤–∏—Ç—å URL", 
                  command=lambda: self.add_download_dialog("url")).pack(side=tk.LEFT, padx=(0, 5))
        ttk.Button(control_frame, text="üß≤ –î–æ–±–∞–≤–∏—Ç—å —Ç–æ—Ä—Ä–µ–Ω—Ç", 
                  command=lambda: self.add_download_dialog("torrent")).pack(side=tk.LEFT, padx=(0, 10))
        
        # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        ttk.Button(control_frame, text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", 
                  command=self.refresh_downloads).pack(side=tk.LEFT)
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∑–æ–∫
        columns = ('file', 'status', 'progress', 'speed', 'size')
        self.tree = ttk.Treeview(main_frame, columns=columns, show='headings', height=15)
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏
        self.tree.heading('file', text='–§–∞–π–ª')
        self.tree.heading('status', text='–°—Ç–∞—Ç—É—Å')
        self.tree.heading('progress', text='–ü—Ä–æ–≥—Ä–µ—Å—Å')
        self.tree.heading('speed', text='–°–∫–æ—Ä–æ—Å—Ç—å')
        self.tree.heading('size', text='–†–∞–∑–º–µ—Ä')
        
        # –®–∏—Ä–∏–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫
        self.tree.column('file', width=300)
        self.tree.column('status', width=100)
        self.tree.column('progress', width=100)
        self.tree.column('speed', width=100)
        self.tree.column('size', width=150)
        
        # –°–∫—Ä–æ–ª–ª–±–∞—Ä
        scrollbar = ttk.Scrollbar(main_frame, orient=tk.VERTICAL, command=self.tree.yview)
        self.tree.configure(yscrollcommand=scrollbar.set)
        
        # –†–∞–∑–º–µ—â–µ–Ω–∏–µ
        self.tree.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        
        # –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
        self.context_menu = tk.Menu(self.root, tearoff=0)
        self.context_menu.add_command(label="‚è∏Ô∏è –ü–∞—É–∑–∞/–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å", command=self.toggle_download)
        self.context_menu.add_separator()
        self.context_menu.add_command(label="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É", command=self.remove_download)
        self.context_menu.add_command(label="üî• –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª", command=self.delete_file)
        self.context_menu.add_separator()
        self.context_menu.add_command(label="üìÅ –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É", command=self.open_folder)
        
        self.tree.bind("<Button-3>", self.show_context_menu)
        
        # –°—Ç–∞—Ç—É—Å –±–∞—Ä
        self.status_label = ttk.Label(main_frame, text="–ì–æ—Ç–æ–≤")
        self.status_label.pack(fill=tk.X, pady=(10, 0))
        
    def setup_monitoring(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
        self.aria2_client.register_callback("downloads_updated", self.on_downloads_updated)
        self.aria2_client.start_monitoring()
        # –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        self.refresh_downloads()
        
    def on_downloads_updated(self, downloads):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–æ–∫"""
        self.root.after(0, lambda: self.update_downloads_list(downloads))
        
    def update_downloads_list(self, downloads):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–≥—Ä—É–∑–æ–∫"""
        # –û—á–∏—Å—Ç–∫–∞ –¥–µ—Ä–µ–≤–∞
        for item in self.tree.get_children():
            self.tree.delete(item)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–æ–∫
        active_count = 0
        for download in downloads:
            gid = download.get("gid", "")
            filename = os.path.basename(download.get("files", [{}])[0].get("path", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–∞–π–ª"))
            status = download.get("status", "unknown")
            
            total_length = int(download.get("totalLength", 0))
            completed_length = int(download.get("completedLength", 0))
            download_speed = int(download.get("downloadSpeed", 0))
            
            # –ü—Ä–æ–≥—Ä–µ—Å—Å
            if total_length > 0:
                progress = f"{(completed_length / total_length * 100):.1f}%"
            else:
                progress = "0%"
            
            # –°–∫–æ—Ä–æ—Å—Ç—å
            speed = format_speed(download_speed) if download_speed > 0 else "-"
            
            # –†–∞–∑–º–µ—Ä
            if total_length > 0:
                size_text = f"{format_size(completed_length)} / {format_size(total_length)}"
            else:
                size_text = format_size(completed_length)
            
            # –°—Ç–∞—Ç—É—Å
            status_text = {
                "active": "–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è",
                "paused": "–ü–∞—É–∑–∞", 
                "complete": "–ó–∞–≤–µ—Ä—à–µ–Ω–æ",
                "error": "–û—à–∏–±–∫–∞",
                "removed": "–£–¥–∞–ª–µ–Ω–æ"
            }.get(status, status)
            
            if status == "active":
                active_count += 1
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥–µ—Ä–µ–≤–æ
            item = self.tree.insert('', tk.END, values=(filename, status_text, progress, speed, size_text))
            self.downloads[item] = download
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        total_count = len(downloads)
        if total_count == 0:
            status_text = "–ù–µ—Ç –∑–∞–≥—Ä—É–∑–æ–∫"
        else:
            status_text = f"–ó–∞–≥—Ä—É–∑–æ–∫: {total_count}, –∞–∫—Ç–∏–≤–Ω—ã—Ö: {active_count}"
        
        self.status_label.config(text=status_text)
        
    def add_download_dialog(self, default_type="url"):
        """–î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏"""
        dialog = tk.Toplevel(self.root)
        dialog.title("–î–æ–±–∞–≤–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É")
        dialog.geometry("600x300")
        dialog.transient(self.root)
        dialog.grab_set()
        
        # –¢–∏–ø –∑–∞–≥—Ä—É–∑–∫–∏
        type_frame = ttk.LabelFrame(dialog, text="–¢–∏–ø –∑–∞–≥—Ä—É–∑–∫–∏")
        type_frame.pack(fill=tk.X, padx=10, pady=10)
        
        download_type = tk.StringVar(value=default_type)
        ttk.Radiobutton(type_frame, text="URL —Å—Å—ã–ª–∫–∞", variable=download_type, 
                       value="url").pack(anchor=tk.W, padx=10, pady=5)
        ttk.Radiobutton(type_frame, text="–¢–æ—Ä—Ä–µ–Ω—Ç —Ñ–∞–π–ª", variable=download_type, 
                       value="torrent").pack(anchor=tk.W, padx=10, pady=5)
        
        # URL —Ñ—Ä–µ–π–º
        url_frame = ttk.LabelFrame(dialog, text="URL —Å—Å—ã–ª–∫–∞")
        url_frame.pack(fill=tk.X, padx=10, pady=(0, 10))
        
        url_entry = ttk.Entry(url_frame, width=70)
        url_entry.pack(fill=tk.X, padx=10, pady=10)
        url_entry.focus()
        
        # –¢–æ—Ä—Ä–µ–Ω—Ç —Ñ—Ä–µ–π–º
        torrent_frame = ttk.LabelFrame(dialog, text="–¢–æ—Ä—Ä–µ–Ω—Ç —Ñ–∞–π–ª")
        torrent_frame.pack(fill=tk.X, padx=10, pady=(0, 10))
        
        torrent_path_frame = ttk.Frame(torrent_frame)
        torrent_path_frame.pack(fill=tk.X, padx=10, pady=10)
        
        torrent_entry = ttk.Entry(torrent_path_frame, width=60)
        torrent_entry.pack(side=tk.LEFT, fill=tk.X, expand=True, padx=(0, 5))
        
        def browse_torrent():
            filename = filedialog.askopenfilename(
                title="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—Ä—Ä–µ–Ω—Ç —Ñ–∞–π–ª",
                initialdir=os.path.expanduser("~/–ó–∞–≥—Ä—É–∑–∫–∏"),
                filetypes=[("–¢–æ—Ä—Ä–µ–Ω—Ç —Ñ–∞–π–ª—ã", "*.torrent"), ("–í—Å–µ —Ñ–∞–π–ª—ã", "*.*")]
            )
            if filename:
                torrent_entry.delete(0, tk.END)
                torrent_entry.insert(0, filename)
        
        ttk.Button(torrent_path_frame, text="–û–±–∑–æ—Ä...", command=browse_torrent).pack(side=tk.RIGHT)
        
        # –ü–∞–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
        folder_frame = ttk.LabelFrame(dialog, text="–ü–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")
        folder_frame.pack(fill=tk.X, padx=10, pady=(0, 10))
        
        folder_path_frame = ttk.Frame(folder_frame)
        folder_path_frame.pack(fill=tk.X, padx=10, pady=10)
        
        folder_entry = ttk.Entry(folder_path_frame, width=60)
        folder_entry.pack(side=tk.LEFT, fill=tk.X, expand=True, padx=(0, 5))
        folder_entry.insert(0, os.path.expanduser("~/–ó–∞–≥—Ä—É–∑–∫–∏"))
        
        def browse_folder():
            folder = filedialog.askdirectory(
                title="–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏",
                initialdir=os.path.expanduser("~/–ó–∞–≥—Ä—É–∑–∫–∏")
            )
            if folder:
                folder_entry.delete(0, tk.END)
                folder_entry.insert(0, folder)
        
        ttk.Button(folder_path_frame, text="–û–±–∑–æ—Ä...", command=browse_folder).pack(side=tk.RIGHT)
        
        # –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        def update_interface():
            if download_type.get() == "url":
                url_frame.configure(relief=tk.RAISED)
                torrent_frame.configure(relief=tk.FLAT)
                url_entry.configure(state=tk.NORMAL)
                torrent_entry.configure(state=tk.DISABLED)
                url_entry.focus()
            else:
                url_frame.configure(relief=tk.FLAT)
                torrent_frame.configure(relief=tk.RAISED)
                url_entry.configure(state=tk.DISABLED)
                torrent_entry.configure(state=tk.NORMAL)
                torrent_entry.focus()
        
        # –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∫ —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∞–º
        for widget in type_frame.winfo_children():
            if isinstance(widget, ttk.Radiobutton):
                widget.configure(command=update_interface)
        
        update_interface()  # –ù–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
        
        # –ö–Ω–æ–ø–∫–∏
        button_frame = ttk.Frame(dialog)
        button_frame.pack(fill=tk.X, padx=10, pady=10)
        
        def on_ok():
            folder = folder_entry.get().strip()
            
            options = {}
            if folder:
                options["dir"] = folder
            
            if download_type.get() == "url":
                url = url_entry.get().strip()
                if not url:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ URL")
                    return
                
                gid = self.aria2_client.add_download(url, options)
            else:
                torrent_path = torrent_entry.get().strip()
                if not torrent_path:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—Ä—Ä–µ–Ω—Ç —Ñ–∞–π–ª")
                    return
                
                if not os.path.exists(torrent_path):
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–¢–æ—Ä—Ä–µ–Ω—Ç —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return
                
                gid = self.aria2_client.add_torrent(torrent_path, options)
            
            if gid:
                messagebox.showinfo("–£—Å–ø–µ—Ö", f"–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: {gid}")
                dialog.destroy()
            else:
                messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É")
        
        ttk.Button(button_frame, text="OK", command=on_ok).pack(side=tk.RIGHT, padx=(5, 0))
        ttk.Button(button_frame, text="–û—Ç–º–µ–Ω–∞", command=dialog.destroy).pack(side=tk.RIGHT)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter
        url_entry.bind('<Return>', lambda e: on_ok())
        torrent_entry.bind('<Return>', lambda e: on_ok())
        
    def show_context_menu(self, event):
        """–ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é"""
        item = self.tree.selection()[0] if self.tree.selection() else None
        if item:
            self.context_menu.post(event.x_root, event.y_root)
    
    def toggle_download(self):
        """–ü–∞—É–∑–∞/–≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏"""
        selection = self.tree.selection()
        if not selection:
            return
        
        item = selection[0]
        download = self.downloads.get(item)
        if not download:
            return
        
        gid = download.get("gid")
        status = download.get("status")
        
        if status == "active":
            self.aria2_client.pause_download(gid)
        else:
            self.aria2_client.unpause_download(gid)
    
    def remove_download(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏"""
        selection = self.tree.selection()
        if not selection:
            return
        
        if messagebox.askyesno("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", "–£–¥–∞–ª–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É?"):
            item = selection[0]
            download = self.downloads.get(item)
            if download:
                gid = download.get("gid")
                self.aria2_client.remove_download(gid)
    
    def open_folder(self):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –ø–∞–ø–∫–∏ —Å —Ñ–∞–π–ª–æ–º"""
        selection = self.tree.selection()
        if not selection:
            return
        
        item = selection[0]
        download = self.downloads.get(item)
        if not download:
            return
        
        file_path = download.get("files", [{}])[0].get("path", "")
        if file_path:
            folder_path = os.path.dirname(file_path)
            if os.path.exists(folder_path):
                os.system(f'xdg-open "{folder_path}"')
    
    def delete_file(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –¥–∏—Å–∫–∞"""
        selection = self.tree.selection()
        if not selection:
            return
        
        item = selection[0]
        download = self.downloads.get(item)
        if not download:
            return
        
        files = download.get("files", [])
        if not files:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
            
        file_path = files[0].get("path", "")
        if not file_path or not os.path.exists(file_path):
            messagebox.showerror("–û—à–∏–±–∫–∞", "–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return
        
        filename = os.path.basename(file_path)
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        if messagebox.askyesno("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", 
                             f"–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª —Å –¥–∏—Å–∫–∞?\n\n{filename}\n\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –§–∞–π–ª –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞!"):
            try:
                # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∑ aria2
                gid = download.get("gid")
                self.aria2_client.remove_download(gid)
                
                # –ó–∞—Ç–µ–º —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
                os.remove(file_path)
                messagebox.showinfo("–£—Å–ø–µ—Ö", f"–§–∞–π–ª —É–¥–∞–ª–µ–Ω:\n{filename}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
                self.refresh_downloads()
                
            except Exception as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª:\n{e}")
    
    def refresh_downloads(self):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞"""
        downloads = self.aria2_client.get_all_downloads()
        self.update_downloads_list(downloads)
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        try:
            self.root.mainloop()
        except KeyboardInterrupt:
            pass
        finally:
            self.aria2_client.shutdown()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    app = SimpleDownloadGUI()
    app.run()


if __name__ == "__main__":
    main()